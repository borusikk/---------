import os
import shutil
from django.core.management.base import BaseCommand
from django.conf import settings
from feedback_app.models import Faculty, Department, Professor

class Command(BaseCommand):
    help = "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏"

    def add_arguments(self, parser):
        parser.add_argument('data_path', type=str, help="–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")

    def handle(self, *args, **options):
        base_dir = options['data_path']
        if not os.path.exists(base_dir):
            self.stdout.write(self.style.ERROR(f"‚ùå –ü–∞–ø–∫–∞ '{base_dir}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"))
            return

        self.stdout.write(self.style.SUCCESS(f"üìÇ –ù–∞—á–∞—Ç –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑: {base_dir}"))

        media_dir = os.path.join(settings.MEDIA_ROOT, 'professors/photos/')
        os.makedirs(media_dir, exist_ok=True)  # ‚úÖ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç

        for faculty_name in os.listdir(base_dir):
            faculty_path = os.path.join(base_dir, faculty_name)
            if not os.path.isdir(faculty_path):
                continue

            faculty, _ = Faculty.objects.get_or_create(name=faculty_name)
            self.stdout.write(self.style.SUCCESS(f"‚úî –§–∞–∫—É–ª—å—Ç–µ—Ç: {faculty.name}"))

            for department_name in os.listdir(faculty_path):
                department_path = os.path.join(faculty_path, department_name)
                if not os.path.isdir(department_path):
                    continue

                department, _ = Department.objects.get_or_create(name=department_name, faculty=faculty)
                self.stdout.write(self.style.SUCCESS(f"  ‚úî –ö–∞—Ñ–µ–¥—Ä–∞: {department.name}"))

                for file_name in os.listdir(department_path):
                    file_path = os.path.join(department_path, file_name)

                    if file_name.endswith(".txt"):  # –ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
                        professor_name = file_name.replace(".txt", "").replace("_", " ")
                        professor, created = Professor.objects.get_or_create(name=professor_name)
                        professor.departments.add(department)
                        professor.save()

                        if created:
                            self.stdout.write(self.style.SUCCESS(f"    ‚úî –°–æ–∑–¥–∞–Ω: {professor.name}"))
                        else:
                            self.stdout.write(self.style.WARNING(f"    üîÑ –û–±–Ω–æ–≤–ª–µ–Ω (–¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ñ–µ–¥—Ä–∞): {professor.name}"))

                    elif file_name.endswith((".jpg", ".png")):  # –§–æ—Ç–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
                        professor_name = file_name.replace(".jpg", "").replace(".png", "").replace("_", " ")

                        try:
                            professor = Professor.objects.get(name=professor_name)
                            destination_path = os.path.join(media_dir, file_name)

                            # ‚úÖ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ `media/professors/photos/`
                            shutil.copy(file_path, destination_path)

                            # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                            professor.photo = f"professors/photos/{file_name}"
                            professor.save()

                            self.stdout.write(self.style.SUCCESS(f"    üñº –§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è {professor.name}"))
                        except Professor.DoesNotExist:
                            self.stdout.write(self.style.ERROR(f"    ‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å '{professor_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!"))
